import csv
silly_dictionary = {"tuple9":(3,1,1,'A',(0,0,0))}

def segmenting_via_if (tuple) :
  if tuple[0] == 1 :
    if tuple[1] == 1 :
      if tuple[2] == 1 : return (7)
      return (6)
    elif tuple[2] == 1 : return (5)
    return (1)
  elif tuple[1] == 1 :
    if tuple[2] == 1 : return (4)
    return (2)
  elif tuple[2] == 1 : return (3)
  return (0)

def wrapper_for_pretty_outputs (dictionary):
  for keys,values in dictionary.items():
    segment_value = segmenting_via_if(values)
    if segment_value == 0:
      pass
    else:
      print(keys+" :",values,":",segment_value)

#wrapper_for_pretty_outputs(silly_dictionary)

def create_sorted_dictionary(dictionary):
  print_dictionary = {}
  for keys,values in dictionary.items():
    segment_category = segmenting_via_if(values)
#    print(print_dictionary.values())
    if segment_category != 0:
      print_dictionary[keys] = (values[0], values[1], values[2], segment_category)
  return (print_dictionary)

#print(type(create_sorted_dictionary(silly_dictionary)))
#print(create_sorted_dictionary(silly_dictionary))

saving_my_sorted_dictionary = create_sorted_dictionary(silly_dictionary)
csv_file = 'dictionary2csv.csv'
with open(csv_file, 'w', newline='') as file:
  writer = csv.writer(file)
  writer.writerow(['Key', 'Value'])
  for key, value in saving_my_sorted_dictionary.items():
    writer.writerow([key, value])

print(f"Dictionary saved to {csv_file}")

# old way
for keys,values in silly_dictionary.items():
  segment_value = segmenting_via_if(values)
  if segment_value != 0:
    print(keys+" :",values,":",segment_value)

# basically old way, but with wrapper shows unnecessary attributes.
#wrapper_for_pretty_outputs(silly_dictionary)

# New, safest way
create_sorted_dictionary(silly_dictionary)
