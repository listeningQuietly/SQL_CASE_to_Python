# This appears exceptionally similar to SQL CASE because Python IF works extremely similarly (Boolean logic).

#def segmenting_via_if (a ,b ,c) :
#  IF a == 1 :
#    IF b == 1 :
#      if c == 1 : return (7)
#      return (6)
#    elif c == 1 : return (5)
#    return (1)
#  elif b == 1 :
#    if c == 1 : return (4)
#    return (2)
#  elif c == 1 : return (3)
#  return (0)

#print(segmenting_via_if(1 ,0 ,1))
dictionary_of_tuples = {"tuple8":(1,1,1),"tuple7":(1,1,0),"tuple6":(1,0,1),"tuple5":(1,0,0),
                        "tuple4":(0,1,1),"tuple3":(0,1,0),"tuple2":(0,0,1),"tuple1":(0,0,0)}
#print(dictionary_of_tuples['tuple8'])

def segmenting_via_if (tuple) :
  if tuple[0] == 1 :
    if tuple[1] == 1 :
      if tuple[2] == 1 : return (7)
      return (6)
    elif tuple[2] == 1 : return (5)
    return (1)
  elif tuple[1] == 1 :
    if tuple[2] == 1 : return (4)
    return (2)
  elif tuple[2] == 1 : return (3)
  return (0)

#print(segmenting_via_if(dictionary_of_tuples['tuple8']))
for keys,values in dictionary_of_tuples.items():
  print(keys+" :",values,":",segmenting_via_if(values))
